server {
    listen 80;
    server_name localhost;
    root /usr/share/nginx/html;
    index index.html;

    # Compressão gzip para melhorar performance
    gzip on;
    gzip_comp_level 6;
    gzip_min_length 100;
    gzip_types text/plain text/css application/javascript application/json;

    # Controle de cache para arquivos estáticos
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
        expires 1y;
        add_header Cache-Control "public, max-age=31536000";
        try_files $uri =404;
    }

    # Redirecionamento das chamadas de API para o backend
    location /api/ {
        # Usamos resolver para permitir resolução DNS dinâmica
        resolver 127.0.0.11 ipv6=off;

        # Definir variável para o backend
        set $backend "finance-service:8080";

        # Redirecionar para o backend
        proxy_pass http://$backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;

        # Adicionar timeout para evitar que o nginx fique pendurado
        proxy_connect_timeout 5s;
        proxy_read_timeout 60s;

        # Retornar erro 502 se o backend não estiver disponível
        proxy_intercept_errors on;
        error_page 502 =200 /api-unavailable.json;
    }

    # API indisponível fallback
    location = /api-unavailable.json {
        add_header Content-Type application/json;
        return 200 '{"error":"API service is currently unavailable, please try again later"}';
    }

    # Angular app - todas as outras rotas vão para o index.html
    location / {
        try_files $uri $uri/ /index.html;
    }

    # Tratamento de erros
    error_page 404 /index.html;
    error_page 500 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }
}
